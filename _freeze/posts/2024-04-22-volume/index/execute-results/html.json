{
  "hash": "f7e210af4c47e42c7043508512b7f2ac",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Analyzing gym data\nauthor: 'Simon Grimm '\ndate: '2024-04-19'\nformat:\n  html:\n    code-fold: true\n    code-numbering: true\n    code-numbering-start: 1\ncap-location: bottom\n---\n\n::: {#1bb6a41b .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nimport matplotlib.dates as mdates\n```\n:::\n\n\n# Volume, Volume, Volume\n\n::: {#b1315c37 .cell execution_count=2}\n``` {.python .cell-code}\ndf = pd.read_csv(\"../../data/2024-04-22.csv\")\ndf['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d %I:%M:%S %p')\ndf['Volume'] = df['Weight'] * df[\"Reps\"]\n\nday_volume = df.groupby(df['Date'].dt.date)['Volume'].sum()\n\nfig, ax = plt.subplots(figsize=(10, 5), dpi=600)\n\nmove_to_boston = dt.datetime(2022, 10, 1)\nswitch_to_thrall = dt.datetime(2023, 12, 1)\n\nax.axvline(x=move_to_boston, color='r', linestyle='--')\nax.text(move_to_boston - pd.DateOffset(days=25), 3e6, 'Move to Boston', ha='right', va='bottom')\nax.axvline(x=switch_to_thrall, color='g', linestyle='--')\nax.text(switch_to_thrall - pd.DateOffset(days=25), 3e6, 'Switch to Thrall Routine', ha='right', va='bottom')\n\nsns.lineplot(x=day_volume.index, y=day_volume.cumsum(), ax=ax)\nax.xaxis.set_major_locator(mdates.YearLocator())\nax.xaxis.set_minor_locator(mdates.MonthLocator())\nax.xaxis.set_major_formatter(mdates.DateFormatter('%Y'))\n\nax.set_ylim(0, 3.5e6)\n\nfor y in np.arange(1e6, 4e6, 1e6):\n    ax.axhline(y=y, color='grey', linestyle='-', alpha=0.1)\nax.set_yticks([1e6, 2e6, 3e6])\nax.set_yticklabels(['1 Million\\nlbs', '2 Million\\nlbs', '3 Million\\nlbs'])\nax.set_ylabel('')\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nax.set_title(\"Total Volume per Day\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\n::: {#a37c32bb .cell execution_count=3}\n``` {.python .cell-code}\ndf = pd.read_csv(\"../../data/2024-04-22.csv\")\ndf['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d %I:%M:%S %p')\ndf['Month'] = df['Date'].dt.to_period('M')\ndf['Volume'] = df['Weight'] * df[\"Reps\"]\nmonthly_volume = df.groupby('Month')['Volume'].sum()\n\nfig, ax = plt.subplots(figsize=(10, 5), dpi=600)\nmonthly_volume.plot(kind='bar', ax=ax, color='skyblue')\n\nax.set_title(\"Pounds per Month\")\nax.set_xlabel(\"Month\")\nax.set_ylabel(\"Total Pounds\")\n\n# Convert the PeriodIndex to a DatetimeIndex\nmonthly_volume.index = monthly_volume.index.to_timestamp()\n\n#color bars after move to boston red, and g\nmove_to_boston = dt.datetime(2022, 10, 1)\nswitch_to_thrall = dt.datetime(2023, 12, 1)\n\n\n\nplt.xticks(rotation=45)\n\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\nplt.tight_layout()\nplt.show()\n\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-4-output-1.png){}\n:::\n:::\n\n\n## Frequency per week\n\n::: {#add5801c .cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\ndata = pd.read_csv('../../data/2024-04-22.csv', parse_dates=['Date'])\ndata['Workout'] = data['Workout Name'] + ' (' + data['Duration'] + ')'\n\n# Group the data by week and count the unique workouts\nworkout_counts = data.groupby([pd.Grouper(key='Date', freq='W'), 'Workout']).size().reset_index(name='Workout Count')\nworkout_counts = workout_counts.groupby('Date')['Workout'].nunique().reset_index(name='Unique Workouts')\n\n# Set the style for the plot\nsns.set(style='darkgrid')\n\n# Create a line plot\nplt.figure(figsize=(12, 6))\nsns.lineplot(data=workout_counts, x='Date', y='Unique Workouts', marker='o')\n\n# Set the title and labels\nplt.title('Workout Frequency by Week', fontsize=16)\nplt.xlabel('Week', fontsize=12)\nplt.ylabel('Number of Unique Workouts', fontsize=12)\n\n# Rotate the x-axis labels for better readability\nplt.xticks(rotation=45)\n\n# Show the plot\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-1.png){width=953 height=567}\n:::\n:::\n\n\n## Volume and max rep weight per exercise\n\nThe first three exercises are\n\n::: {#a6676939 .cell execution_count=5}\n``` {.python .cell-code}\ndf = pd.read_csv(\"../../data/2024-04-22.csv\")\ndf['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d %I:%M:%S %p')\nexercise_counts = df.groupby(['Date', 'Exercise Name']).size().reset_index(name='count')['Exercise Name'].value_counts()\n#print(exercise_counts)\nn_plots = exercise_counts[exercise_counts > 40].count()\n\n\nfig, axs = plt.subplots(n_plots, figsize=(10,3*n_plots), dpi=600, sharex=True)\n\ndf[\"Volume\"] = df[\"Weight\"] * df[\"Reps\"]\nmax_rep_weight = df.groupby(['Date', 'Exercise Name'])['Weight'].max().reset_index()\nmax_rep_weight.rename(columns={'Weight': 'Max Rep Weight'}, inplace=True)\n\n# Merge the max rep weight back into the original DataFrame\ndf = pd.merge(df, max_rep_weight, on=['Date', 'Exercise Name'])\ni=-1\n\nexcluded_exercises = [\"Chest Dip\", \"Bench Press (Barbell)\", \"Pull Up\", \"Deadlift\"]\nfor exercise, count in exercise_counts.items():\n    if exercise in excluded_exercises:\n        continue\n    if count > 40:\n        i+=1\n        sns.lineplot(x=df[df['Exercise Name'] == exercise]['Date'], y=df[df['Exercise Name'] == exercise]['Volume'], ax=axs[i], errorbar=None, markers=True, marker='o', alpha=0.5)\n        ax2 = axs[i].twinx()\n        sns.lineplot(x=df[df['Exercise Name'] == exercise]['Date'], y=df[df['Exercise Name'] == exercise]['Max Rep Weight'], ax=ax2, errorbar=None, markers=True, color='red', marker='o', alpha=0.5)\n\n        axs[i].set_title(f\"{exercise}\")\n\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){}\n:::\n:::\n\n\n## Volume and max rep weight per exercise\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}